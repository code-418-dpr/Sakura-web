datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  output        = "../src/app/generated/prisma"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id            String    @id @default(uuid())
  name          String
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String
  role          UserRole  @default(USER)
  inviterId     String?
  balance       BigInt

  accounts  Account[]
  lotteries Lottery[]
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Ticket {
  number    Int    @id @default(autoincrement())
  userId    String
  lotteryId String
  place     Int?   @db.SmallInt
  price     Float

  user    User    @relation(fields: [userId], references: [id])
  lottery Lottery @relation(fields: [lotteryId], references: [id])

  @@unique([number, userId, lotteryId])
}

enum LotteryType {
  REAL
  VIRTUAL
}

model Lottery {
  id                   String      @id @default(uuid())
  title                String
  description          String
  type                 LotteryType
  image                Bytes?      @db.ByteA
  participantsCount    Int
  vipParticipantsCount Int         @db.SmallInt
  winnersCount         Int
  primeWinnersCount    Int         @db.SmallInt
  ticketPrice          Float
  vipDiscount          Int         @db.SmallInt
  start                DateTime
  end                  DateTime
  rules                String

  tickets Ticket[]
  prizes  Prize[]
}

model Prize {
  id           String  @id @default(uuid())
  title        String?
  lotteryId    String
  realPrice    Float
  virtualPrice Float
  count        Int     @db.SmallInt

  lottery Lottery @relation(fields: [lotteryId], references: [id])
}
